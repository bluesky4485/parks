<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入 JDBC 外部配置 -->
    <context:property-placeholder location="classpath:properties/jdbc.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--<property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>-->
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <!--<property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>-->
        <property name="maxIdleTime" value="${jdbc.maximumActiveTime}"/>

        <!--If you wish c3p0 to allow unresolved transactional work to commit on checkin, set autoCommitOnClose to true.-->
        <!--By default, c3p0 rolls back unresolved transactional work when a user calls close().-->
        <property name="autoCommitOnClose" value="false"/>
    </bean>

    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                <prop key="connection.autocommit">false</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>

                <!--配置数据表的审计-->
                <prop key="org.hibernate.envers.audit_table_suffix">_audit</prop>
                <!--<prop key="org.hibernate.envers.revision_field_name">version</prop>-->
                <prop key="org.hibernate.envers.store_data_at_delete">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="org.hibernate.envers.default_schema">dbo</prop>

            </props>
        </property>

        <!--扫描包含 hbm 文件的目录 -->
        <!--
        <property name="mappingDirectoryLocations">
			<list>
                <value>classpath*:com/hbyd/parks/managesys/hbm</value>
			</list>
		</property>
		-->

        <!--scan annotated classes within specified package-->
        <property name="packagesToScan">
            <list>
                <value>com.hbyd.parks.domain</value>
                <!--<value>com.hbyd.parks.officesys.verLog</value>-->
            </list>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 支持注解的事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>

        <!--TODO 模板缓存尚未测试-->
        <!--Set whether to cache all queries executed by this template.-->
        <!--<property name="cacheQueries" value="true"/>-->
        <!--Set the name of the cache region for queries executed by this template.-->
        <!--<property name="queryCacheRegion" value=""/>-->
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>