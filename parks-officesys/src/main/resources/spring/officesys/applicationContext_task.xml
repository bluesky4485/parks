<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--enable support for @Scheduled and @Async annotations-->
    <!--
        executor  负责处理 @Async 标注的方法
        scheduler 负责处理 @Scheduled 标注的方法

        scheduler 底层依靠 executor 执行
        但 task:annotation-driven 定义的 executor 和 scheduler 是各自独立，没有关系的。
    -->
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>

    <!--默认情况下，Bean 的 scope 为 singleton, 工厂 Bean 必须是 singleton -->
    <!--<bean id="calcTask" class="com.hbyd.parks.attendancesys.task.CalcTaskFactoryBean"/>-->

    <!--单线程版本-->
    <task:executor id="myExecutor" pool-size="3-5" queue-capacity="100" rejection-policy="CALLER_RUNS" />

    <!--多线程版本, 会出问题, 一个人员一天的所有打卡记录必须使用一个线程顺序执行，这样多线程才安全-->
    <!--<task:executor id="myExecutor" pool-size="5-25" queue-capacity="100" rejection-policy="CALLER_RUNS"/>-->

    <!--scheduler 的 pool-size 对应定时器的个数，表示：使用多少个线程处理定时任务-->
    <task:scheduler id="myScheduler" pool-size="2"/>

    <bean id="taskBean" class="com.hbyd.parks.officesys.task.SendMessageTask"/>
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="taskBean" method="methodA" cron="0 30 8 * * ?" />
    </task:scheduled-tasks>
</beans>
