<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://cxf.apache.org/core" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- do not use import statements if CXFServlet init parameters link to this beans.xml -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <bean id="abstractLogInterceptor" abstract="true">
        <property name="prettyLogging" value="true"/>
    </bean>

    <bean id="logInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor"
          parent="abstractLogInterceptor"/>
    <bean id="logOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor"
          parent="abstractLogInterceptor"/>

    <cxf:bus name="cxf">
        <!--统一配置非法字符过滤器-->
        <cxf:properties>
            <!--org.apache.cxf.message.Message.put("disable.outputstream.optimization", Boolean.TRUE); -->
            <!--<entry key="disable.outputstream.optimization" value="true"/>-->

            <!--如果数据库内存储的内容有 XML 非法字符，使用自定义 XMLOutputFactory 创建的 XMLStreamWriters 将其转换为合法字符，默认为空格-->
            <entry key="javax.xml.stream.XMLOutputFactory" value-ref="xmlOutputFactory"/>
        </cxf:properties>

        <cxf:features>
            <bean class="org.apache.cxf.transport.common.gzip.GZIPFeature">
                <property name="threshold" value="0"/>
            </bean>
        </cxf:features>
        <cxf:inInterceptors>
            <ref bean="logInInterceptor"/>
            <bean class="com.hbyd.parks.common.cxf.interceptor.AuthInfoInterceptor">
                <constructor-arg index="0" value="pre-protocol"/>
            </bean>
        </cxf:inInterceptors>

        <cxf:outInterceptors>
            <ref bean="logOutInterceptor"/>
        </cxf:outInterceptors>
    </cxf:bus>

    <!--非法字符转换器-->
    <bean id="invalidCharHandler" class="com.hbyd.parks.common.cxf.handler.MyInvalidCharHandler">
        <!--替换为空格-->
        <constructor-arg index="0" value=" "/>
    </bean>

    <!--
        自定义 XMLOutputFactory, 用于获取 XMLEventWriters and XMLStreamWriters
        WstxOutputFactory extends XMLOutputFactory2 extends XMLOutputFactory
    -->
    <bean id="xmlOutputFactory" class="com.ctc.wstx.stax.WstxOutputFactory"/>

    <!--
        MethodInvokingFactoryBean implements InitializingBean, InitializingBean 定义了 afterPropertiesSet()
        下面表示：在 properties 设定之后，执行目标方法初始化 xmlOutputFactory.
    -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local="xmlOutputFactory"/>
        </property>

        <property name="targetMethod">
            <value>setProperty</value>
        </property>

        <!--调用目标方法时所需的参数：setProperty(String name, Object value)-->
        <!--setProperty("com.ctc.wstx.outputInvalidCharHandler", invalidCharHandler)-->
        <property name="arguments">
            <list>
                <!--key-->
                <util:constant static-field="com.ctc.wstx.api.WstxOutputProperties.P_OUTPUT_INVALID_CHAR_HANDLER"/>
                <!--value-->
                <ref bean="invalidCharHandler"/>
            </list>
        </property>
    </bean>
</beans>