<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hbyd.parks</groupId>
    <artifactId>parks</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <!--逻辑模块：客户端-->
        <module>parks-client</module>

        <!--逻辑模块：业务模块-->
        <module>parks-managesys</module>
        <module>parks-attendancesys</module>
        <module>parks-supportsys</module>
        <module>parks-doorsys</module>
        <module>parks-meetsys</module>
        <module>parks-officesys</module>


        <!--用于发布的模块-->
        <!--<module>parks-all</module>-->

        <!--功能模块-->
        <module>parks-sei</module>
        <module>parks-dao</module>
        <module>parks-common</module>

    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring.version>3.2.9.RELEASE</spring.version>
        <spring.data.jpa..version>1.6.0.RELEASE</spring.data.jpa..version>
        <spring.data.commons.version>1.8.0.RELEASE</spring.data.commons.version>
        <querydsl.version>3.3.1</querydsl.version>
        <hibernate.version>4.2.21.Final</hibernate.version>
        <struts.version>2.3.15.2</struts.version>
        <httpclient.version>3.1</httpclient.version>
        <cxf.version>3.0.0</cxf.version>
        <log.bridge.version>1.7.5</log.bridge.version>
        <junit.version>4.7</junit.version>
        <javassist.version>3.1.0.GA</javassist.version>
        <log.version>1.2.14</log.version>
        <proxool.version>0.9.1</proxool.version>
        <poi.version>3.14</poi.version>


        <!--J2EE 7 Stack: compatible with Tomcat7's libs-->
        <jsp.api.version>2.2</jsp.api.version>
        <javax.servlet-api.version>2.5</javax.servlet-api.version>
        <cdi-api.version>1.1</cdi-api.version>

        <!--JPA 2.0-->
        <hibernate-jpa-2.0-api.version>1.0.1.Final</hibernate-jpa-2.0-api.version>

        <jackson.version>1.9.13</jackson.version>

        <jtds.version>1.2.4</jtds.version>
        <mysql.driver.version>5.1.10</mysql.driver.version>
        <gson.version>2.2.4</gson.version>
        <apache.commons.codec.version>1.4</apache.commons.codec.version>
        <dozer.version>5.5.1</dozer.version>

        <commons.beanutils.version>1.9.1</commons.beanutils.version>
        <joda.version>2.4</joda.version>
        <hibernate-commons-annotations.version>3.2.0.Final</hibernate-commons-annotations.version>
        <org.torpedoquery.version>1.6.0</org.torpedoquery.version>
        <guava.version>18.0</guava.version>
        <hibernate-envers.verion>4.2.21.Final</hibernate-envers.verion>

        <jsr305.version>3.0.0</jsr305.version>
        <quartz.version>2.2.1</quartz.version>
        <c3p0>0.9.2.1</c3p0>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!--定时器-->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!--Guava, 需要从 torpedoquery 中显式 exclude Guava-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!--Guava 注解，可选，这里只是为了让编译通过-->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>

            <!--poi-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!--date time helper-->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!--Apache Commons-->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>

            <!--显式声明由 hibernate-c3p0 传递引入的官方依赖-->
            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>xml-apis</artifactId>
                        <groupId>xml-apis</groupId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-envers</artifactId>
                <version>${hibernate-envers.verion}</version>
            </dependency>


            <!-- Hibernate -->
            <!--hibernate-entitymanager 依赖于：
                1. hibernate-core
                2. hibernate-jpa-2.0-api
                3. hibernate-validator
            -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.0-api</artifactId>
                <version>${hibernate-jpa-2.0-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-commons-annotations</artifactId>
                <version>${hibernate-commons-annotations.version}</version>
            </dependency>

            <!--二级缓存-->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <!-- Hibernate 默认使用 SLF4J 记录日志，但 Spring 在日志迁移（jcl -> slf4j -> log4j） 时提供了
                slf4j-api，因此这里就不配置 slf4j 了 -->

            <!-- Hibernate gives you a choice of bytecode providers between cglib and
                javassist -->
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>


            <!-- 日志配置， 参考： Spring Reference 1.3.2 Logging - Not Using Commons Logging
                - Using SLF4J 日志策略： Spring 默认使用 Commons-Logging 记录日志，为了将日志迁移到 Log4j 上，需要这么做：

                A common choice might be to bridge Spring to SLF4J, and then provide explicit
                binding from SLF4J to Log4J. You need to supply 4 dependencies (and exclude
                the existing commons-logging): the bridge, the SLF4J API, the binding to
                Log4J, and the Log4J implementation itself.

            ## Spring 日志配置开始 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- 日志桥接 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${log.bridge.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${log.bridge.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${log.bridge.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!--Spring Data-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring.data.jpa..version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>${spring.data.commons.version}</version>
            </dependency>

            <!--Querydsl core that provides the core functions of Querydsl-->
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-core</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <!--Querydsl APT, which provides support for APT based code generation-->
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <!--Querydsl JPA, that adds support for JPA annotations-->
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl.version}</version>
            </dependency>

            <!-- Struts Struts2.X 默认使用 log4j 记录日志， Spring 在日志迁移（jcl -> slf4j -> log4j）时已经提供，这里就不配置了 -->
            <dependency>
                <groupId>org.apache.struts</groupId>
                <artifactId>struts2-core</artifactId>
                <version>${struts.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.struts</groupId>
                <artifactId>struts2-spring-plugin</artifactId>
                <version>${struts.version}</version>
            </dependency>

            <!-- Proxool -->
            <dependency>
                <groupId>com.cloudhopper.proxool</groupId>
                <artifactId>proxool</artifactId>
                <version>${proxool.version}</version>
            </dependency>

            <!--J2EE Stack-->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp.api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>${cdi-api.version}</version>
            </dependency>

            <!-- CXF SOAP 服务端依赖-->
            <!-- http://cxf.apache.org/docs/using-cxf-with-maven.html -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- CXF Restful 服务端依赖 -->
            <!--
                 cxf-rt-frontend-jaxrs 内置用于发布服务的 JAXRSServerFactoryBean (使用 Jetty 发布)
             -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- CXF Restful: 客户端依赖 -->
            <!--
                cxf-rt-rs-client 内置客户端： WebClient 和 JAXRSClientFactory
             -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- 使用 Jetty 发布服务 -->
            <!-- Jetty is needed if you're using the CXFServlet -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- Restful WADL auto-generation -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-service-description</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!--CXF Interceptor 和 Invoker 依赖，已由 cxf-rt-frontend-jaxrs 传递引入
                这里配置是为方便其他模块继承
            -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-bindings-soap</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!--  JSON Provider -->
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-jaxrs</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!--其他数据绑定-->
            <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-databinding-xmlbeans</artifactId>-->
            <!--<version>${cxf.version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-databinding-aegis</artifactId>-->
            <!--<version>${cxf.version}</version>-->
            <!--</dependency>-->

            <!-- SQL Server 驱动：JTDS -->
            <dependency>
                <groupId>net.sourceforge.jtds</groupId>
                <artifactId>jtds</artifactId>
                <version>${jtds.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!--  Gson: Java to Json conversion -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- Encryption -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${apache.commons.codec.version}</version>
            </dependency>

            <!-- 实体映射: domain 和 dto 的双向拷贝 -->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>${dozer.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer-spring</artifactId>
                <version>${dozer.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
